#!/bin/bash
BL_FILE=/tmp/hosts-zero
BL_URL=https://raw.githubusercontent.com/StevenBlack/hosts/master/hosts

MSG_INFO="El fitxer /etc/hosts ha estat actualitzat."
MSG_ERR="No s'ha pogut actualitzar el fitxer /etc/hosts. Consulta /var/syslog."
NOTIFY=notify-send
LOG_ID="HOSTS UPDATE"

WS="\b(?=\w)"
WE="\b(?<=\w)"

IPV4_OCT="${WS}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])${WE}"
IPV6_SEG="${WS}[0-9a-f]{1,4}${WE}"

REGEX_IPV4="((?i)(${IPV4_OCT}[.]){3}${IPV4_OCT})"

REGEX_IPV6="((?i)((${IPV6_SEG}:){7}${IPV6_SEG}|\
(${IPV6_SEG}:){1,7}:|\
(${IPV6_SEG}:){1,6}:${IPV6_SEG}|\
(${IPV6_SEG}:){1,5}(:${IPV6_SEG}){1,2}|\
(${IPV6_SEG}:){1,4}(:${IPV6_SEG}){1,3}|\
(${IPV6_SEG}:){1,3}(:${IPV6_SEG}){1,4}|\
(${IPV6_SEG}:){1,2}(:${IPV6_SEG}){1,5}|\
${IPV6_SEG}:(:${IPV6_SEG}){1,6})|\
::${IPV6_SEG}(:${IPV6_SEG}){0,6}|\
${IPV6_SEG}(:${IPV6_SEG}){0,6}::)(%[0-9a-z]+)?"


REGEX_IPV64="((?i)(::(0{1,4}:){1,5}|(0{1,4}:){6}|((0{1,4}:){1,5}|::((0{1,4}:){1,4})?)[f]{4}:)${REGEX_IPV4})"

REGEX_IP="^(${REGEX_IPV64}|${REGEX_IPV4}|${REGEX_IPV6})$"
REGEX_WHITELIST="^((?i)(0[.]0[.]0[.]0|127[.]0[.][01][.]1|255[.]255[.]255[.]255|::[01]|f[ef]0[02]::[0-3]|fe80::[01]%[0-9a-z]+))$"



function fail() {
    /usr/bin/logger -p 'cron.err' '${LOG_ID}: Update of hosts file failed. Unknown IPs found.'
    notify_users "${MSG_ERR}" "critical"
    exit 1
}

function unit_test() {
    ip_set=("0.0.0.0" "127.0.0.1" "255.255.255.255" "256.254.253.252"
            "255.255.255.256" "255.255.2555.252" "255.255.25.252"
            "233.221.3" "fe80::e484:21:bfb3:9fc1" "fz80:fd490::1"
            "::1" "abCd:3040::1" "ABCD::0" "repeat::again::0"
            "2001:0DB8:0::0:1428:192.0.1.1" "2001:0Db8::0:192.0.1.1"
            "::ffff:127.0.0.1" "::127.0.0.1" "fe80::1%lo0")
    ip_wc=(1 1 1 0 0 0 1 0 1 0 1 1 1 0 0 0 1 0 1)
    i=0
    for ip in ${ip_set[@]}; do
        output=$(echo ${ip} | grep -P "${REGEX_IP}" | wc -l)
        if [ ${output} -ne ${ip_wc[${i}]} ]; then
            echo "Error: ${ip} should output ${ip_wc[${i}]} but it resulted in ${output}."
            echo "Matched string: $(echo ${ip} | grep -Po "${REGEX_IP}")"
            exit 1
        fi
        i=$(expr $i + 1)
    done
}


function notify_users() {
    msg=${1}
    urgency=${2}
    if [ -z "$(which ${NOTIFY})" ]; then
        return
    fi
    if [ -z "${urgency}" ]; then
        urgency="low"
    fi
    online=$(who | cut -d' ' -f1)
    displays=($(who | gawk 'BEGIN{FS="[[:space:]]+"}/[:alnum:]/{printf "%s ", $2}END{}'))
    i=0
    for u in ${online}; do
        uid=$(id -u ${u})
        disp=${displays[${i}]}
        su -c "env DISPLAY=\"${disp}\" DBUS_SESSION_BUS_ADDRESS=\"unix:path=/run/user/${uid}/bus\" ${NOTIFY} -u \"${urgency}\" \"ActualitzaciÃ³ arxiu /etc/hosts\"  \"${msg}\"" ${u}
        i=$(expr $i + 1)
    done
}


if [ x${1} = x"test" ]; then
    unit_test
    echo "Tests passed successfully."
    exit 0
fi

wget -O ${BL_FILE} ${BL_URL} 2> /dev/null
if [[ 0 -eq $? && -f /etc/hosts-original ]]; then
    BEGIN=$(date '+%s.%N')
    POSSIBLE_IPS=$(grep -ioE '^[^#[:cntrl:][:space:]]+' "${BL_FILE}" | wc -l)
    FOUND_IPS=$(grep -ioE '^[^#[:cntrl:][:space:]]+' "${BL_FILE}" \
                    | grep -P "${REGEX_IP}" \
                    | grep -P "${REGEX_WHITELIST}"\
                    | wc -l)

    if [ ${POSSIBLE_IPS} -ne ${FOUND_IPS} ]; then
        fail
    fi

    END=$(date '+%s.%N')
    ELAPSED=$(echo "${END} - ${BEGIN}" | bc)
    echo "Elapsed time: ${ELAPSED} s"

    /usr/bin/logger -p 'cron.info' "${LOG_ID}: Updating hosts file with ${BL_URL}"
    cat /etc/hosts-original /tmp/hosts-zero > /etc/hosts
    rm /tmp/hosts-zero
    /usr/bin/logger -p 'cron.info' "${LOG_ID}: Hosts file updated with ${BL_URL}"
    notify_users "${MSG_INFO}" "low"
else
    /usr/bin/logger -p 'cron.err' '${LOG_ID}: Update of hosts file failed. Please check that Internet is available and that /etc/hosts-original exists.'
    notify_users "${MSG_ERR}" "critical"
fi


# Other black lists:
# http://winhelp2002.mvps.org/hosts.txt
# https://adaway.org/hosts.txt
# https://pgl.yoyo.org/adservers/serverlist.php?hostformat=hosts&showintro=1&mimetype=plaintext
# https://www.malwaredomainlist.com/hostslist/hosts.txt
# https://raw.githubusercontent.com/StevenBlack/hosts/master/hosts
